
netflix.iep.userservice {
  connect-timeout = 1s
  read-timeout = 30s
  frequency = 5m

  whitelist {
    emails = [
      //"foo@example.com"
    ]

    mappings = [
      //{
      //  email = "old-list@example.com"
      //  replacement = "new-list@example.com"
      //}
    ]
  }

  http {
    enabled = false

    // How long to cache emails that have been checked before re-verifying against the remote services
    cache-ttl = "1d"

    // Order list of uris to check by issuing a GET request. If any of them return 200, then the
    // email is considered valid. Use `{email}` to substitue the address.
    uris = [
      //{
      //  uri = ""
      //
      //  // If set to true, then it will use a custom SSL factory when making the request
      //  use-ssl-factory = true
      //
      //  // This impl will do remote calls inline. If one or more of the calls fails (5xx or exception),
      //  // then it is unclear whether the email is valid or not. This flag controls the behavior to either
      //  // reject the email or treat it as valid.
      //  valid-on-failure = true
      //}
    ]
  }
}