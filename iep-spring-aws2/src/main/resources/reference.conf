
netflix.iep.aws {

  // This should be the region that the app is running in.
  region = "us-east-1"
  region = ${?netflix.iep.env.region}

  default {
    credentials {
      //role-arn = "arn:aws:iam::1234567890:role/IepTest"
      //role-session-name = "iep"
    }

    client {
      // Synchronous HTTP implementation class to use. If not explicitly set
      // the service loader will be used to find an implementation on the classpath.
      // If multiple implementation are present, then the first will be chosen
      // and could be unpredictable.
      //sync-http-impl = "software.amazon.awssdk.http.apache.ApacheSdkHttpService"

      // Async HTTP implementation to use. If not explicitly set
      // the service loader will be used to find an implementation on the classpath.
      // If multiple implementation are present, then the first will be chosen
      // and could be unpredictable.
      //async-http-impl = "software.amazon.awssdk.http.nio.netty.NettySdkAsyncHttpService"

      // Timeout for the overall request, total time including all retries
      //api-call-timeout = 300s

      // Timeout for an individual attempt
      //apt-attempt-call-timeout = 30s

      // Other headers
      //headers = [
      //  "Accept: gzip"
      //]

      // Customizing the user agent
      //user-agent-prefix
      //user-agent-suffix
    }
  }

  // http://docs.aws.amazon.com/general/latest/gr/rande.html
  // This is used to set overrides when a service is not available locally in the
  // region we are running in.
  endpoint {

    cloudwatch {
      us-nflx-1 = us-west-1
    }

    dynamodbv2 {
      us-nflx-1 = us-west-1
    }

    route53 {
      // https://github.com/aws/aws-sdk-java-v2/issues/456
      af-south-1 = aws-global
      ap-east-1 = aws-global
      ap-northeast-1 = aws-global
      ap-northeast-2 = aws-global
      ap-south-1 = aws-global
      ap-southeast-1 = aws-global
      ap-southeast-2 = aws-global
      ca-central-1 = aws-global
      cn-north-1 = aws-global
      cn-northwest-1 = aws-global
      eu-central-1 = aws-global
      eu-north-1 = aws-global
      eu-south-1 = aws-global
      eu-west-1 = aws-global
      eu-west-2 = aws-global
      eu-west-3 = aws-global
      me-south-1 = aws-global
      sa-east-1 = aws-global
      us-east-1 = aws-global
      us-east-2 = aws-global
      us-gov-east-1 = aws-global
      us-gov-west-1 = aws-global
      us-iso-east-1 = aws-global
      us-isob-east-1 = aws-global
      us-west-1 = aws-global
      us-west-2 = aws-global
    }

    simpleemail {
      us-west-1 = us-west-2
      eu-central-1 = eu-west-1
      ap-southeast-1 = us-west-2
      ap-southeast-2 = us-west-2
      ap-northeast-1 = us-west-2
      sa-east-1 = us-east-1
      us-nflx-1 = us-west-2
    }

    sns {
      us-nflx-1 = us-west-1
    }

    sqs {
      us-nflx-1 = us-west-1
    }
  }
}